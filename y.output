Grammar

    0 $accept: S $end

    1 S: BEGIN_ NL statement_list END_

    2 statement_list: statement NL
    3               | statement_list statement NL

    4 statement: declaration
    5          | assignment
    6          | loop
    7          | PRINT LIT

    8 declaration: type ID_list

    9 type: INT
   10     | FLOAT
   11     | STRING
   12     | REAL_NUM

   13 ID_list: ID
   14        | ID_list CM ID

   15 assignment: ID EQ expression

   16 expression: ID
   17           | NUM
   18           | REAL_DIG
   19           | LIT

   20 loop: FOR ID EQ NUM TO NUM NL statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID (258) 13 14 15 16 20
    NUM (259) 17 20
    NL (260) 1 2 3 20
    BEGIN_ (261) 1
    PRINT (262) 7
    END_ (263) 1
    INT (264) 9
    FLOAT (265) 10
    REAL_NUM (266) 12
    STRING (267) 11
    CM (268) 14
    EQ (269) 15 20
    FOR (270) 20
    TO (271) 20
    LIT (272) 7 19
    REAL_DIG (273) 18


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    S (20)
        on left: 1
        on right: 0
    statement_list (21)
        on left: 2 3
        on right: 1 3
    statement (22)
        on left: 4 5 6 7
        on right: 2 3 20
    declaration (23)
        on left: 8
        on right: 4
    type (24)
        on left: 9 10 11 12
        on right: 8
    ID_list (25)
        on left: 13 14
        on right: 8 14
    assignment (26)
        on left: 15
        on right: 5
    expression (27)
        on left: 16 17 18 19
        on right: 15
    loop (28)
        on left: 20
        on right: 6


State 0

    0 $accept: • S $end
    1 S: • BEGIN_ NL statement_list END_

    BEGIN_  shift, and go to state 1

    S  go to state 2


State 1

    1 S: BEGIN_ • NL statement_list END_

    NL  shift, and go to state 3


State 2

    0 $accept: S • $end

    $end  shift, and go to state 4


State 3

    1 S: BEGIN_ NL • statement_list END_
    2 statement_list: • statement NL
    3               | • statement_list statement NL
    4 statement: • declaration
    5          | • assignment
    6          | • loop
    7          | • PRINT LIT
    8 declaration: • type ID_list
    9 type: • INT
   10     | • FLOAT
   11     | • STRING
   12     | • REAL_NUM
   15 assignment: • ID EQ expression
   20 loop: • FOR ID EQ NUM TO NUM NL statement

    ID        shift, and go to state 5
    PRINT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    REAL_NUM  shift, and go to state 9
    STRING    shift, and go to state 10
    FOR       shift, and go to state 11

    statement_list  go to state 12
    statement       go to state 13
    declaration     go to state 14
    type            go to state 15
    assignment      go to state 16
    loop            go to state 17


State 4

    0 $accept: S $end •

    $default  accept


State 5

   15 assignment: ID • EQ expression

    EQ  shift, and go to state 18


State 6

    7 statement: PRINT • LIT

    LIT  shift, and go to state 19


State 7

    9 type: INT •

    $default  reduce using rule 9 (type)


State 8

   10 type: FLOAT •

    $default  reduce using rule 10 (type)


State 9

   12 type: REAL_NUM •

    $default  reduce using rule 12 (type)


State 10

   11 type: STRING •

    $default  reduce using rule 11 (type)


State 11

   20 loop: FOR • ID EQ NUM TO NUM NL statement

    ID  shift, and go to state 20


State 12

    1 S: BEGIN_ NL statement_list • END_
    3 statement_list: statement_list • statement NL
    4 statement: • declaration
    5          | • assignment
    6          | • loop
    7          | • PRINT LIT
    8 declaration: • type ID_list
    9 type: • INT
   10     | • FLOAT
   11     | • STRING
   12     | • REAL_NUM
   15 assignment: • ID EQ expression
   20 loop: • FOR ID EQ NUM TO NUM NL statement

    ID        shift, and go to state 5
    PRINT     shift, and go to state 6
    END_      shift, and go to state 21
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    REAL_NUM  shift, and go to state 9
    STRING    shift, and go to state 10
    FOR       shift, and go to state 11

    statement    go to state 22
    declaration  go to state 14
    type         go to state 15
    assignment   go to state 16
    loop         go to state 17


State 13

    2 statement_list: statement • NL

    NL  shift, and go to state 23


State 14

    4 statement: declaration •

    $default  reduce using rule 4 (statement)


State 15

    8 declaration: type • ID_list
   13 ID_list: • ID
   14        | • ID_list CM ID

    ID  shift, and go to state 24

    ID_list  go to state 25


State 16

    5 statement: assignment •

    $default  reduce using rule 5 (statement)


State 17

    6 statement: loop •

    $default  reduce using rule 6 (statement)


State 18

   15 assignment: ID EQ • expression
   16 expression: • ID
   17           | • NUM
   18           | • REAL_DIG
   19           | • LIT

    ID        shift, and go to state 26
    NUM       shift, and go to state 27
    LIT       shift, and go to state 28
    REAL_DIG  shift, and go to state 29

    expression  go to state 30


State 19

    7 statement: PRINT LIT •

    $default  reduce using rule 7 (statement)


State 20

   20 loop: FOR ID • EQ NUM TO NUM NL statement

    EQ  shift, and go to state 31


State 21

    1 S: BEGIN_ NL statement_list END_ •

    $default  reduce using rule 1 (S)


State 22

    3 statement_list: statement_list statement • NL

    NL  shift, and go to state 32


State 23

    2 statement_list: statement NL •

    $default  reduce using rule 2 (statement_list)


State 24

   13 ID_list: ID •

    $default  reduce using rule 13 (ID_list)


State 25

    8 declaration: type ID_list •  [NL]
   14 ID_list: ID_list • CM ID

    CM  shift, and go to state 33

    $default  reduce using rule 8 (declaration)


State 26

   16 expression: ID •

    $default  reduce using rule 16 (expression)


State 27

   17 expression: NUM •

    $default  reduce using rule 17 (expression)


State 28

   19 expression: LIT •

    $default  reduce using rule 19 (expression)


State 29

   18 expression: REAL_DIG •

    $default  reduce using rule 18 (expression)


State 30

   15 assignment: ID EQ expression •

    $default  reduce using rule 15 (assignment)


State 31

   20 loop: FOR ID EQ • NUM TO NUM NL statement

    NUM  shift, and go to state 34


State 32

    3 statement_list: statement_list statement NL •

    $default  reduce using rule 3 (statement_list)


State 33

   14 ID_list: ID_list CM • ID

    ID  shift, and go to state 35


State 34

   20 loop: FOR ID EQ NUM • TO NUM NL statement

    TO  shift, and go to state 36


State 35

   14 ID_list: ID_list CM ID •

    $default  reduce using rule 14 (ID_list)


State 36

   20 loop: FOR ID EQ NUM TO • NUM NL statement

    NUM  shift, and go to state 37


State 37

   20 loop: FOR ID EQ NUM TO NUM • NL statement

    NL  shift, and go to state 38


State 38

    4 statement: • declaration
    5          | • assignment
    6          | • loop
    7          | • PRINT LIT
    8 declaration: • type ID_list
    9 type: • INT
   10     | • FLOAT
   11     | • STRING
   12     | • REAL_NUM
   15 assignment: • ID EQ expression
   20 loop: • FOR ID EQ NUM TO NUM NL statement
   20     | FOR ID EQ NUM TO NUM NL • statement

    ID        shift, and go to state 5
    PRINT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    REAL_NUM  shift, and go to state 9
    STRING    shift, and go to state 10
    FOR       shift, and go to state 11

    statement    go to state 39
    declaration  go to state 14
    type         go to state 15
    assignment   go to state 16
    loop         go to state 17


State 39

   20 loop: FOR ID EQ NUM TO NUM NL statement •

    $default  reduce using rule 20 (loop)
